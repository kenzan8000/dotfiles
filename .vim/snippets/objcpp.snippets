#################### c ####################
snippet #inc
	#include ${1}

snippet #def
	#define ${1}

snippet #if
	#ifdef ${1}
	#endif

snippet #ifn
	#ifndef ${1}
	#endif

snippet #pra
	#pragma mark - ${1}

snippet if
	if (${1}) {
		${2}
	}

snippet else
	else {
		${1}
	}

snippet switch
	switch (${1}) {
		case '${2}':
			${3}
			break;
		default:
			${4}
	}

snippet case
	case '${1}':
		${2}
		break;

snippet while
	while (${1}) {
		${2}
	}

snippet for
	for (${1}) {
		${2}
	}

snippet func
	${1} ${2}(${3})
	{
		${4}
	}


#################### cpp ####################
snippet std::vec
	std::vector<${1}> ${2};

snippet class
	#pragma mark - class
	class ${1} {

	public:
	#pragma mark - initializer
		$1(${2});


	#pragma mark - release
		~$1();


	#pragma mark - public api


	#pragma mark - public constant


	#pragma mark - public variable


	private:
	#pragma mark - private api


	#pragma mark - private constant


	#pragma mark - private variable


	};

snippet cpp_method
	${1} ${2:}::${3}(${4})
	{
		${5}
	}


#################### objc ####################

##### header #####
snippet @inter
	#pragma mark - interface
	@interface ${1} {
	}


	#pragma mark - property


	#pragma mark - api


	@end

##### source #####
snippet @imp
	@implementation ${1}


	#pragma mark - synthesize


	#pragma mark - initializer


	#pragma mark - release


	#pragma mark - lifecycle


	#pragma mark - delegate


	#pragma mark - event listener


	#pragma mark - api


	@end

snippet method
	- (${1})${2}
	{
		${3}
	}

snippet class_method
	+ (${1})${2}
	{
		${3}
	}

##### syntax #####
snippet #imp
	#import ${1}

snippet @pro
	@property (${1}) ${2};

snippet IBO
	IBOutlet ${1} *${2};

snippet IBA
	- (IBAction)${1}:(${2} *)${3}

snippet @syn
	@synthesize ${1};

snippet alloc
	[[${1} alloc] init${2}]

snippet reta
	[${1} retain]

snippet rel
	[${1} release]

snippet autor
	[${1} autorelease]

snippet @sel
	@selector(${1})

snippet NSLocali
	NSLocalizedString(@"${1}", ${2})
